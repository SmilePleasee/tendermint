(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{345:function(e,t,n){"use strict";n.r(t);var a=n(1),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"docker-compose"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}}),e._v(" Docker Compose")]),e._v(" "),n("p",[e._v("With Docker Compose, you can spin up local testnets with a single command.")]),e._v(" "),n("h2",{attrs:{id:"requirements"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}}),e._v(" Requirements")]),e._v(" "),n("ol",[n("li",[n("router-link",{attrs:{to:"/introduction/install.html"}},[e._v("Install tendermint")])],1),e._v(" "),n("li",[n("a",{attrs:{href:"https://docs.docker.com/engine/installation/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Install docker"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Install docker-compose"),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"build"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#build"}}),e._v(" Build")]),e._v(" "),n("p",[e._v("Build the "),n("code",[e._v("tendermint")]),e._v(" binary and, optionally, the "),n("code",[e._v("tendermint/localnode")]),e._v("\ndocker image.")]),e._v(" "),n("p",[e._v("Note the binary will be mounted into the container so it can be updated without\nrebuilding the image.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cd $GOPATH/src/github.com/tendermint/tendermint\n\n# Build the linux binary in ./build\nmake build-linux\n\n# (optionally) Build tendermint/localnode image\nmake build-docker-localnode\n")])])]),n("h2",{attrs:{id:"run-a-testnet"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#run-a-testnet"}}),e._v(" Run a testnet")]),e._v(" "),n("p",[e._v("To start a 4 node testnet run:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("make localnet-start\n")])])]),n("p",[e._v("The nodes bind their RPC servers to ports 26657, 26660, 26662, and 26664 on the\nhost.")]),e._v(" "),n("p",[e._v("This file creates a 4-node network using the localnode image.")]),e._v(" "),n("p",[e._v("The nodes of the network expose their P2P and RPC endpoints to the host machine\non ports 26656-26657, 26659-26660, 26661-26662, and 26663-26664 respectively.")]),e._v(" "),n("p",[e._v("To update the binary, just rebuild it and restart the nodes:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("make build-linux\nmake localnet-stop\nmake localnet-start\n")])])]),n("h2",{attrs:{id:"configuration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}}),e._v(" Configuration")]),e._v(" "),n("p",[e._v("The "),n("code",[e._v("make localnet-start")]),e._v(" creates files for a 4-node testnet in "),n("code",[e._v("./build")]),e._v(" by\ncalling the "),n("code",[e._v("tendermint testnet")]),e._v(" command.")]),e._v(" "),n("p",[e._v("The "),n("code",[e._v("./build")]),e._v(" directory is mounted to the "),n("code",[e._v("/tendermint")]),e._v(" mount point to attach\nthe binary and config files to the container.")]),e._v(" "),n("p",[e._v("To change the number of validators / non-validators change the "),n("code",[e._v("localnet-start")]),e._v(" Makefile target:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("localnet-start: localnet-stop\n\t@if ! [ -f build/node0/config/genesis.json ]; then docker run --rm -v $(CURDIR)/build:/tendermint:Z tendermint/localnode testnet --v 5 --n 3 --o . --populate-persistent-peers --starting-ip-address 192.167.10.2 ; fi\n\tdocker-compose up\n")])])]),n("p",[e._v("The command now will generate config files for 5 validators and 3\nnon-validators network.")]),e._v(" "),n("p",[e._v("Before running it, don't forget to cleanup the old files:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cd $GOPATH/src/github.com/tendermint/tendermint\n\n# Clear the build folder\nrm -rf ./build/node*\n")])])]),n("h2",{attrs:{id:"configuring-abci-containers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuring-abci-containers"}}),e._v(" Configuring abci containers")]),e._v(" "),n("p",[e._v("To use your own abci applications with 4-node setup edit the "),n("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/master/docker-compose.yml",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker-compose.yaml"),n("OutboundLink")],1),e._v(" file and add image to your abci application.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(' abci0:\n    container_name: abci0\n    image: "abci-image"\n    build:\n      context: .\n      dockerfile: abci.Dockerfile\n    command: <insert command to run your abci application>\n    networks:\n      localnet:\n        ipv4_address: 192.167.10.6\n\n  abci1:\n    container_name: abci1\n    image: "abci-image"\n    build:\n      context: .\n      dockerfile: abci.Dockerfile\n    command: <insert command to run your abci application>\n    networks:\n      localnet:\n        ipv4_address: 192.167.10.7\n\n  abci2:\n    container_name: abci2\n    image: "abci-image"\n    build:\n      context: .\n      dockerfile: abci.Dockerfile\n    command: <insert command to run your abci application>\n    networks:\n      localnet:\n        ipv4_address: 192.167.10.8\n\n  abci3:\n    container_name: abci3\n    image: "abci-image"\n    build:\n      context: .\n      dockerfile: abci.Dockerfile\n    command: <insert command to run your abci application>\n    networks:\n      localnet:\n        ipv4_address: 192.167.10.9\n\n')])])]),n("p",[e._v("Override the "),n("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/master/networks/local/localnode/Dockerfile#L12",target:"_blank",rel:"noopener noreferrer"}},[e._v("command"),n("OutboundLink")],1),e._v(" in each node to connect to it's abci.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('  node0:\n    container_name: node0\n    image: "tendermint/localnode"\n    ports:\n      - "26656-26657:26656-26657"\n    environment:\n      - ID=0\n      - LOG=$${LOG:-tendermint.log}\n    volumes:\n      - ./build:/tendermint:Z\n    command: node --proxy_app=tcp://abci0:26658\n    networks:\n      localnet:\n        ipv4_address: 192.167.10.2\n')])])]),n("p",[e._v("Similarly do for node1, node2 and node3 then "),n("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/master/docs/networks/docker-compose.md#run-a-testnet",target:"_blank",rel:"noopener noreferrer"}},[e._v("run testnet"),n("OutboundLink")],1)]),e._v(" "),n("h2",{attrs:{id:"logging"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#logging"}}),e._v(" Logging")]),e._v(" "),n("p",[e._v("Log is saved under the attached volume, in the "),n("code",[e._v("tendermint.log")]),e._v(" file. If the\n"),n("code",[e._v("LOG")]),e._v(" environment variable is set to "),n("code",[e._v("stdout")]),e._v(" at start, the log is not saved,\nbut printed on the screen.")]),e._v(" "),n("h2",{attrs:{id:"special-binaries"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#special-binaries"}}),e._v(" Special binaries")]),e._v(" "),n("p",[e._v("If you have multiple binaries with different names, you can specify which one\nto run with the "),n("code",[e._v("BINARY")]),e._v(" environment variable. The path of the binary is relative\nto the attached volume.")])])}),[],!1,null,null,null);t.default=o.exports}}]);
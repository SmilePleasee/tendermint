(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{325:function(t,e,s){"use strict";s.r(e);var a=s(1),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"adr-034-privvalidator-file-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adr-034-privvalidator-file-structure"}}),t._v(" ADR 034: PrivValidator file structure")]),t._v(" "),s("h2",{attrs:{id:"changelog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}}),t._v(" Changelog")]),t._v(" "),s("p",[t._v("03-11-2018: Initial Draft")]),t._v(" "),s("h2",{attrs:{id:"context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#context"}}),t._v(" Context")]),t._v(" "),s("p",[t._v("For now, the PrivValidator file "),s("code",[t._v("priv_validator.json")]),t._v(" contains mutable and immutable parts.\nEven in an insecure mode which does not encrypt private key on disk, it is reasonable to separate\nthe mutable part and immutable part.")]),t._v(" "),s("p",[t._v("References:\n"),s("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/1181",target:"_blank",rel:"noopener noreferrer"}},[t._v("#1181"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/2657",target:"_blank",rel:"noopener noreferrer"}},[t._v("#2657"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/2313",target:"_blank",rel:"noopener noreferrer"}},[t._v("#2313"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"proposed-solution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proposed-solution"}}),t._v(" Proposed Solution")]),t._v(" "),s("p",[t._v("We can split mutable and immutable parts with two structs:")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FilePVKey stores the immutable part of PrivValidator")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" FilePVKey "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tAddress types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Address  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"address"`')]),t._v("\n\tPubKey  crypto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PubKey  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"pub_key"`')]),t._v("\n\tPrivKey crypto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PrivKey "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"priv_key"`')]),t._v("\n\n\tfilePath "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FilePVState stores the mutable part of PrivValidator")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" FilePVLastSignState "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tHeight    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"height"`')]),t._v("\n\tRound     "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"round"`')]),t._v("\n\tStep      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int8")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"step"`')]),t._v("\n\tSignature "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"signature,omitempty"`')]),t._v("\n\tSignBytes cmn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HexBytes "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"signbytes,omitempty"`')]),t._v("\n\n\tfilePath "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tmtx      sync"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mutex\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Then we can combine "),s("code",[t._v("FilePVKey")]),t._v(" with "),s("code",[t._v("FilePVLastSignState")]),t._v(" and will get the original "),s("code",[t._v("FilePV")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" FilePV "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tKey           FilePVKey\n\tLastSignState FilePVLastSignState\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("As discussed, "),s("code",[t._v("FilePV")]),t._v(" should be located in "),s("code",[t._v("config")]),t._v(", and "),s("code",[t._v("FilePVLastSignState")]),t._v(" should be stored in "),s("code",[t._v("data")]),t._v(". The\nstore path of each file should be specified in "),s("code",[t._v("config.yml")]),t._v(".")]),t._v(" "),s("p",[t._v("What we need to do next is changing the methods of "),s("code",[t._v("FilePV")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#status"}}),t._v(" Status")]),t._v(" "),s("p",[t._v("Draft.")]),t._v(" "),s("h2",{attrs:{id:"consequences"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#consequences"}}),t._v(" Consequences")]),t._v(" "),s("h3",{attrs:{id:"positive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#positive"}}),t._v(" Positive")]),t._v(" "),s("ul",[s("li",[t._v("separate the mutable and immutable of PrivValidator")])]),t._v(" "),s("h3",{attrs:{id:"negative"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#negative"}}),t._v(" Negative")]),t._v(" "),s("ul",[s("li",[t._v("need to add more config for file path")])]),t._v(" "),s("h3",{attrs:{id:"neutral"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#neutral"}}),t._v(" Neutral")])])}),[],!1,null,null,null);e.default=n.exports}}]);
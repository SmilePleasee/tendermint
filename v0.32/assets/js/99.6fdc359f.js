(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{337:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"install-tendermint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-tendermint"}}),t._v(" Install Tendermint")]),t._v(" "),a("p",[t._v("The fastest and easiest way to install the "),a("code",[t._v("tendermint")]),t._v(" binary\nis to run "),a("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/master/scripts/install/install_tendermint_ubuntu.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("this script"),a("OutboundLink")],1),t._v(" on\na fresh Ubuntu instance,\nor "),a("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/master/scripts/install/install_tendermint_bsd.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("this script"),a("OutboundLink")],1),t._v("\non a fresh FreeBSD instance. Read the comments / instructions carefully (i.e., reset your terminal after running the script,\nmake sure you are okay with the network connections being made).")]),t._v(" "),a("h2",{attrs:{id:"from-binary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from-binary"}}),t._v(" From Binary")]),t._v(" "),a("p",[t._v("To download pre-built binaries, see the "),a("a",{attrs:{href:"https://github.com/tendermint/tendermint/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("releases page"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"from-source"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from-source"}}),t._v(" From Source")]),t._v(" "),a("p",[t._v("You'll need "),a("code",[t._v("go")]),t._v(" "),a("a",{attrs:{href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"}},[t._v("installed"),a("OutboundLink")],1),t._v(" and the required\nenvironment variables set, which can be done with the following commands:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOPATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/go"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v('" '),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.bash_profile\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GOPATH")]),t._v("/bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v('" '),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.bash_profile\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GO111MODULE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("on "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.bash_profile\n")])])]),a("h3",{attrs:{id:"get-source-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-source-code"}}),t._v(" Get Source Code")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mkdir -p $GOPATH/src/github.com/tendermint\ncd $GOPATH/src/github.com/tendermint\ngit clone https://github.com/tendermint/tendermint.git\ncd tendermint\n")])])]),a("h3",{attrs:{id:"get-tools-dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-tools-dependencies"}}),t._v(" Get Tools & Dependencies")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("make tools\n")])])]),a("h3",{attrs:{id:"compile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compile"}}),t._v(" Compile")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("make install\n")])])]),a("p",[t._v("to put the binary in "),a("code",[t._v("$GOPATH/bin")]),t._v(" or use:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("make build\n")])])]),a("p",[t._v("to put the binary in "),a("code",[t._v("./build")]),t._v(".")]),t._v(" "),a("p",[a("em",[t._v("DISCLAIMER")]),t._v(" The binary of tendermint is build/installed without the DWARF symbol table. If you would like to build/install tendermint with the DWARF symbol and debug information, remove "),a("code",[t._v("-s -w")]),t._v(" from "),a("code",[t._v("BUILD_FLAGS")]),t._v(" in the make file.")]),t._v(" "),a("p",[t._v("The latest "),a("code",[t._v("tendermint version")]),t._v(" is now installed.")]),t._v(" "),a("h2",{attrs:{id:"run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run"}}),t._v(" Run")]),t._v(" "),a("p",[t._v("To start a one-node blockchain with a simple in-process application:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("tendermint init\ntendermint node --proxy_app=kvstore\n")])])]),a("h2",{attrs:{id:"reinstall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reinstall"}}),t._v(" Reinstall")]),t._v(" "),a("p",[t._v("If you already have Tendermint installed, and you make updates, simply")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd $GOPATH/src/github.com/tendermint/tendermint\nmake install\n")])])]),a("p",[t._v("To upgrade, run")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd $GOPATH/src/github.com/tendermint/tendermint\ngit pull origin master\nmake install\n")])])]),a("h2",{attrs:{id:"compile-with-cleveldb-support"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compile-with-cleveldb-support"}}),t._v(" Compile with CLevelDB support")]),t._v(" "),a("p",[t._v("Install "),a("a",{attrs:{href:"https://github.com/google/leveldb",target:"_blank",rel:"noopener noreferrer"}},[t._v("LevelDB"),a("OutboundLink")],1),t._v(" (minimum version is 1.7).")]),t._v(" "),a("p",[t._v("Install LevelDB with snappy (optionally). Below are commands for Ubuntu:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo apt-get update\nsudo apt install build-essential\n\nsudo apt-get install libsnappy-dev\n\nwget https://github.com/google/leveldb/archive/v1.20.tar.gz && \\\n  tar -zxvf v1.20.tar.gz && \\\n  cd leveldb-1.20/ && \\\n  make && \\\n  sudo cp -r out-static/lib* out-shared/lib* /usr/local/lib/ && \\\n  cd include/ && \\\n  sudo cp -r leveldb /usr/local/include/ && \\\n  sudo ldconfig && \\\n  rm -f v1.20.tar.gz\n")])])]),a("p",[t._v("Set a database backend to "),a("code",[t._v("cleveldb")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# config/config.toml\ndb_backend = "cleveldb"\n')])])]),a("p",[t._v("To install Tendermint, run:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('CGO_LDFLAGS="-lsnappy" make install_c\n')])])]),a("p",[t._v("or run:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('CGO_LDFLAGS="-lsnappy" make build_c\n')])])]),a("p",[t._v("which puts the binary in "),a("code",[t._v("./build")]),t._v(".")])])}),[],!1,null,null,null);e.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{405:function(t,s,e){"use strict";e.r(s);var a=e(1),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"adr-040-blockchain-reactor-refactor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adr-040-blockchain-reactor-refactor"}}),t._v(" ADR 040: Blockchain Reactor Refactor")]),t._v(" "),e("h2",{attrs:{id:"changelog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}}),t._v(" Changelog")]),t._v(" "),e("p",[t._v("19-03-2019: Initial draft")]),t._v(" "),e("h2",{attrs:{id:"context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context"}}),t._v(" Context")]),t._v(" "),e("p",[t._v("The Blockchain Reactor's high level responsibility is to enable peers who are far behind the current state of the\nblockchain to quickly catch up by downloading many blocks in parallel from its peers, verifying block correctness, and\nexecuting them against the ABCI application. We call the protocol executed by the Blockchain Reactor "),e("code",[t._v("fast-sync")]),t._v(".\nThe current architecture diagram of the blockchain reactor can be found here:")]),t._v(" "),e("p",[e("img",{attrs:{src:"img/bc-reactor.png",alt:"Blockchain Reactor Architecture Diagram"}})]),t._v(" "),e("p",[t._v("The current architecture consists of dozens of routines and it is tightly depending on the "),e("code",[t._v("Switch")]),t._v(", making writing\nunit tests almost impossible. Current tests require setting up complex dependency graphs and dealing with concurrency.\nNote that having dozens of routines is in this case overkill as most of the time routines sits idle waiting for\nsomething to happen (message to arrive or timeout to expire). Due to dependency on the "),e("code",[t._v("Switch")]),t._v(", testing relatively\ncomplex network scenarios and failures (for example adding and removing peers) is very complex tasks and frequently lead\nto complex tests with not deterministic behavior ([#3400]). Impossibility to write proper tests makes confidence in\nthe code low and this resulted in several issues (some are fixed in the meantime and some are still open):\n[#3400], [#2897], [#2896], [#2699], [#2888], [#2457], [#2622], [#2026].")]),t._v(" "),e("h2",{attrs:{id:"decision"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#decision"}}),t._v(" Decision")]),t._v(" "),e("p",[t._v("To remedy these issues we plan a major refactor of the blockchain reactor. The proposed architecture is largely inspired\nby ADR-30 and is presented on the following diagram:\n"),e("img",{attrs:{src:"img/bc-reactor-refactor.png",alt:"Blockchain Reactor Refactor Diagram"}})]),t._v(" "),e("p",[t._v("We suggest a concurrency architecture where the core algorithm (we call it "),e("code",[t._v("Controller")]),t._v(") is extracted into a finite\nstate machine. The active routine of the reactor is called "),e("code",[t._v("Executor")]),t._v(" and is responsible for receiving and sending\nmessages from/to peers and triggering timeouts. What messages should be sent and timeouts triggered is determined mostly\nby the "),e("code",[t._v("Controller")]),t._v(". The exception is "),e("code",[t._v("Peer Heartbeat")]),t._v(" mechanism which is "),e("code",[t._v("Executor")]),t._v(" responsibility. The heartbeat\nmechanism is used to remove slow and unresponsive peers from the peer list. Writing of unit tests is simpler with\nthis architecture as most of the critical logic is part of the "),e("code",[t._v("Controller")]),t._v(" function. We expect that simpler concurrency\narchitecture will not have significant negative effect on the performance of this reactor (to be confirmed by\nexperimental evaluation).")]),t._v(" "),e("h3",{attrs:{id:"implementation-changes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#implementation-changes"}}),t._v(" Implementation changes")]),t._v(" "),e("p",[t._v('We assume the following system model for "fast sync" protocol:')]),t._v(" "),e("ul",[e("li",[t._v("a node is connected to a random subset of all nodes that represents its peer set. Some nodes are correct and some\nmight be faulty. We don't make assumptions about ratio of faulty nodes, i.e., it is possible that all nodes in some\npeer set are faulty.")]),t._v(" "),e("li",[t._v("we assume that communication between correct nodes is synchronous, i.e., if a correct node "),e("code",[t._v("p")]),t._v(" sends a message "),e("code",[t._v("m")]),t._v(" to\na correct node "),e("code",[t._v("q")]),t._v(" at time "),e("code",[t._v("t")]),t._v(", then "),e("code",[t._v("q")]),t._v(" will receive message the latest at time "),e("code",[t._v("t+Delta")]),t._v(" where "),e("code",[t._v("Delta")]),t._v(" is a system\nparameter that is known by network participants. "),e("code",[t._v("Delta")]),t._v(" is normally chosen to be an order of magnitude higher than\nthe real communication delay (maximum) between correct nodes. Therefore if a correct node "),e("code",[t._v("p")]),t._v(" sends a request message\nto a correct node "),e("code",[t._v("q")]),t._v(" at time "),e("code",[t._v("t")]),t._v(" and there is no the corresponding reply at time "),e("code",[t._v("t + 2*Delta")]),t._v(", then "),e("code",[t._v("p")]),t._v(" can assume\nthat "),e("code",[t._v("q")]),t._v(" is faulty. Note that the network assumptions for the consensus reactor are different (we assume partially\nsynchronous model there).")])]),t._v(" "),e("p",[t._v('The requirements for the "fast sync" protocol are formally specified as follows:')]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Correctness")]),t._v(": If a correct node "),e("code",[t._v("p")]),t._v(" is connected to a correct node "),e("code",[t._v("q")]),t._v(" for a long enough period of time, then "),e("code",[t._v("p")])]),t._v(" "),e("li",[t._v("will eventually download all requested blocks from "),e("code",[t._v("q")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("Termination")]),t._v(": If a set of peers of a correct node "),e("code",[t._v("p")]),t._v(" is stable (no new nodes are added to the peer set of "),e("code",[t._v("p")]),t._v(") for")]),t._v(" "),e("li",[t._v("a long enough period of time, then protocol eventually terminates.")]),t._v(" "),e("li",[e("code",[t._v("Fairness")]),t._v(": A correct node "),e("code",[t._v("p")]),t._v(" sends requests for blocks to all peers from its peer set.")])]),t._v(" "),e("p",[t._v("As explained above, the "),e("code",[t._v("Executor")]),t._v(" is responsible for sending and receiving messages that are part of the "),e("code",[t._v("fast-sync")]),t._v("\nprotocol. The following messages are exchanged as part of "),e("code",[t._v("fast-sync")]),t._v(" protocol:")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Message "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  MessageUnknown Message "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v("\n  MessageStatusRequest\n  MessageStatusResponse\n  MessageBlockRequest\n  MessageBlockResponse\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[e("code",[t._v("MessageStatusRequest")]),t._v(" is sent periodically to all peers as a request for a peer to provide its current height. It is\npart of the "),e("code",[t._v("Peer Heartbeat")]),t._v(" mechanism and a failure to respond timely to this message results in a peer being removed\nfrom the peer set. Note that the "),e("code",[t._v("Peer Heartbeat")]),t._v(" mechanism is used only while a peer is in "),e("code",[t._v("fast-sync")]),t._v(" mode. We assume\nhere existence of a mechanism that gives node a possibility to inform its peers that it is in the "),e("code",[t._v("fast-sync")]),t._v(" mode.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" MessageStatusRequest "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  SeqNum "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sequence number of the request")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("MessageStatusResponse")]),t._v(" is sent as a response to "),e("code",[t._v("MessageStatusRequest")]),t._v(" to inform requester about the peer current\nheight.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" MessageStatusResponse "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  SeqNum "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sequence number of the corresponding request")]),t._v("\n  Height "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// current peer height")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("MessageBlockRequest")]),t._v(" is used to make a request for a block and the corresponding commit certificate at a given height.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" MessageBlockRequest "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Height "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("MessageBlockResponse")]),t._v(" is a response for the corresponding block request. In addition to providing the block and the\ncorresponding commit certificate, it contains also a current peer height.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" MessageBlockResponse "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Height         "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n  Block          Block\n  Commit         Commit\n  PeerHeight     "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("In addition to sending and receiving messages, and "),e("code",[t._v("HeartBeat")]),t._v(" mechanism, controller is also managing timeouts\nthat are triggered upon "),e("code",[t._v("Controller")]),t._v(" request. "),e("code",[t._v("Controller")]),t._v(" is then informed once a timeout expires.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" TimeoutTrigger "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  TimeoutUnknown TimeoutTrigger "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v("\n  TimeoutResponseTrigger\n  TimeoutTerminationTrigger\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("Controller")]),t._v(" can be modelled as a function with clearly defined inputs:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("State")]),t._v(" - current state of the node. Contains data about connected peers and its behavior, pending requests,")]),t._v(" "),e("li",[t._v("received blocks, etc.")]),t._v(" "),e("li",[e("code",[t._v("Event")]),t._v(" - significant events in the network.")])]),t._v(" "),e("p",[t._v("producing clear outputs:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("State")]),t._v(" - updated state of the node,")]),t._v(" "),e("li",[e("code",[t._v("MessageToSend")]),t._v(" - signal what message to send and to which peer")]),t._v(" "),e("li",[e("code",[t._v("TimeoutTrigger")]),t._v(" - signal that timeout should be triggered.")])]),t._v(" "),e("p",[t._v("We consider the following "),e("code",[t._v("Event")]),t._v(" types:")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Event "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  EventUnknown Event "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v("\n  EventStatusReport\n  EventBlockRequest\n  EventBlockResponse\n  EventRemovePeer\n  EventTimeoutResponse\n  EventTimeoutTermination\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[e("code",[t._v("EventStatusResponse")]),t._v(" event is generated once "),e("code",[t._v("MessageStatusResponse")]),t._v(" is received by the "),e("code",[t._v("Executor")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" EventStatusReport "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  PeerID ID\n  Height "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("EventBlockRequest")]),t._v(" event is generated once "),e("code",[t._v("MessageBlockRequest")]),t._v(" is received by the "),e("code",[t._v("Executor")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" EventBlockRequest "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Height "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n  PeerID p2p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("EventBlockResponse")]),t._v(" event is generated upon reception of "),e("code",[t._v("MessageBlockResponse")]),t._v(" message by the "),e("code",[t._v("Executor")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" EventBlockResponse "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Height             "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n  Block              Block\n  Commit             Commit\n  PeerID             ID\n  PeerHeight         "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("EventRemovePeer")]),t._v(" is generated by "),e("code",[t._v("Executor")]),t._v(" to signal that the connection to a peer is closed due to peer misbehavior.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" EventRemovePeer "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  PeerID ID\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("EventTimeoutResponse")]),t._v(" is generated by "),e("code",[t._v("Executor")]),t._v(" to signal that a timeout triggered by "),e("code",[t._v("TimeoutResponseTrigger")]),t._v(" has\nexpired.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" EventTimeoutResponse "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  PeerID ID\n  Height "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("EventTimeoutTermination")]),t._v(" is generated by "),e("code",[t._v("Executor")]),t._v(" to signal that a timeout triggered by "),e("code",[t._v("TimeoutTerminationTrigger")]),t._v("\nhas expired.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" EventTimeoutTermination "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Height "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("MessageToSend")]),t._v(" is just a wrapper around "),e("code",[t._v("Message")]),t._v(" type that contains id of the peer to which message should be sent.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" MessageToSend "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  PeerID  ID\n  Message Message\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The Controller state machine can be in two modes: "),e("code",[t._v("ModeFastSync")]),t._v(" when\na node is trying to catch up with the network by downloading committed blocks,\nand "),e("code",[t._v("ModeConsensus")]),t._v(" in which it executes Tendermint consensus protocol. We\nconsider that "),e("code",[t._v("fast sync")]),t._v(" mode terminates once the Controller switch to\n"),e("code",[t._v("ModeConsensus")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Mode "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  ModeUnknown Mode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v("\n  ModeFastSync\n  ModeConsensus\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[e("code",[t._v("Controller")]),t._v(" is managing the following state:")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" ControllerState "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Height             "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the first block that is not committed")]),t._v("\n  Mode               Mode             "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mode of operation")]),t._v("\n  PeerMap            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("PeerStats "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// map of peer IDs to peer statistics")]),t._v("\n  MaxRequestPending  "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// maximum height of the pending requests")]),t._v("\n  FailedRequests     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// list of failed block requests")]),t._v("\n  PendingRequestsNum "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("              "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// total number of pending requests")]),t._v("\n  Store              "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("BlockInfo      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// contains list of downloaded blocks")]),t._v("\n  Executor           BlockExecutor    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// store, verify and executes blocks")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("PeerStats")]),t._v(" data structure keeps for every peer its current height and a list of pending requests for blocks.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" PeerStats "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Height             "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n  PendingRequest     "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("             "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a request sent to this peer")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("BlockInfo")]),t._v(" data structure is used to store information (as part of block store) about downloaded blocks: from what peer\na block and the corresponding commit certificate are received.")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" BlockInfo "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Block  Block\n  Commit Commit\n  PeerID ID                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a peer from which we received the corresponding Block and Commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("Controller")]),t._v(" is initialized by providing an initial height ("),e("code",[t._v("startHeight")]),t._v(") from which it will start downloading\nblocks from peers and the current state of the "),e("code",[t._v("BlockExecutor")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewControllerState")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("startHeight "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" executor BlockExecutor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ControllerState "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ControllerState "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" startHeight\n  state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ModeFastSync\n  state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxRequestPending "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" startHeight "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequestsNum "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Executor "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" executor\n  initialize state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FailedRequests and state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Store to empty data structures\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The core protocol logic is given with the following function:")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEvent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state ControllerState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event Event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ControllerState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimeoutTrigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n  timeout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mode "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ModeConsensus"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" event "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" EventBlockRequest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBlockResponseMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Only respond to BlockRequests while in ModeConsensus!"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ModeFastSync"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" event "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" EventBlockRequest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBlockResponseMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" EventStatusResponse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEventStatusResponse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" EventRemovePeer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEventRemovePeer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" EventBlockResponse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEventBlockResponse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" EventResponseTimeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEventResponseTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" EventTerminationTimeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Termination timeout is triggered in case of empty peer set and in case there are no pending requests.")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If this timeout expires and in the meantime no new peers are added or new pending requests are made")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// then `fast-sync` mode terminates by switching to `ModeConsensus`.")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note that termination timeout should be higher than the response timeout.")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequestsNum "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("State "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConsensusMode "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Received unknown event type!"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBlockResponseMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state ControllerState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event BlockRequest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" MessageToSend "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  msgToSend "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ok "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("ok "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" peerStats "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PeerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Executor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ContainsBlockWithHeight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    peerStats "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height\n    msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" BlockResponseMessage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     Block"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Executor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBlock")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eventHeight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     Commit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Executor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCommit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eventHeight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     CurrentHeight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    msgToSend "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MessageToSend "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" peerStats\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" msgToSend\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEventStatusResponse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event EventStatusResponse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state ControllerState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ControllerState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MessageToSend"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimeoutTrigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ok "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("ok "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    peerStats "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PeerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    peerStats "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if there are no pending requests for this peer, try to send him a request for block")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequest "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBlockRequestMessages")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg is nil if no request for block can be made to a peer at this point in time")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequests "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height\n      state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequestsNum"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// when a request for a block is sent to a peer, a response timeout is triggered. If no corresponding block is sent by the peer")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// during response timeout period, then the peer is considered faulty and is removed from the peer set.")]),t._v("\n      timeout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ResponseTimeoutTrigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PeerTimeout "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequestsNum "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if there are no pending requests and no new request can be placed to the peer, termination timeout is triggered.")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// If termination timeout expires and we are still at the same height and there are no pending requests, the "fast-sync"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mode is finished and we switch to `ModeConsensus`.")]),t._v("\n      timeout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TerminationTimeoutTrigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TerminationTimeout "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" peerStats\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEventRemovePeer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event EventRemovePeer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state ControllerState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ControllerState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MessageToSend"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimeoutTrigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ok "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ok "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    pendingRequest "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequest\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if a peer is removed from the peer set, its pending request is declared failed and added to the `FailedRequests` list")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// so it can be retried.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" pendingRequest "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FailedRequests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pendingRequest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequestsNum"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if the peer set is empty after removal of this peer then termination timeout is triggered.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      timeout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TerminationTimeoutTrigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TerminationTimeout "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Removing unknown peer!"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n")])])]),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEventBlockResponse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event EventBlockResponse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state ControllerState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ControllerState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MessageToSend"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimeoutTrigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    peerStats "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// when expected block arrives from a peer, it is added to the store so it can be verified and if correct executed after.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequest "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequest "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequestsNum"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerHeight "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerHeight "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Store"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" BlockInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Block"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Commit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// blocks are verified sequentially so adding a block to the store does not mean that it will be immediately verified")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// as some of the previous blocks might be missing.")]),t._v("\n      state "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("verifyBlocks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// it can lead to event.PeerID being removed from peer list")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ok "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ok "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// we try to identify new request for a block that can be asked to the peer")]),t._v("\n        msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBlockRequestMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequests "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height\n          state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequestsNum"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if request for block is made, response timeout is triggered")]),t._v("\n          timeout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ResponseTimeoutTrigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PeerTimeout "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequestsNum "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if the peer map is empty (the peer can be removed as block verification failed) or there are no pending requests")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// termination timeout is triggered.")]),t._v("\n           timeout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TerminationTimeoutTrigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TerminationTimeout "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Received Block from wrong peer!"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Received Block from unknown peer!"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" peerStats\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEventResponseTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ok "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ok "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    peerStats "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if a response timeout expires and the peer hasn't delivered the block, the peer is removed from the peer list and")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the request is added to the `FailedRequests` so the block can be downloaded from other peer")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" peerStats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequest "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FailedRequests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pendingRequest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequestsNum"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if peer set is empty, then termination timeout is triggered")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      timeout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TimeoutTrigger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TerminationTimeout "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBlockRequestMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state ControllerState"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" peerID ID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" peerHeight "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" MessageToSend "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n  blockHeight "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" find request in state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FailedRequests such that r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" peerHeight "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns `nil` if there are no such request")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if there is a height in failed requests that can be downloaded from the peer send request to it")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    blockNumber "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" r\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FailedRequests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxRequestPending "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" peerHeight "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if height of the maximum pending request is smaller than peer height, then ask peer for next block")]),t._v("\n    state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxRequestPending"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n    blockHeight "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxRequestPending "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// increment state.MaxRequestPending and then return the new value")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" blockHeight "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MessageToSend "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" peerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MessageBlockRequest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" blockHeight "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" msg\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("verifyBlocks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state State"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" State "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  done "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("done "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    block "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Store"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" block "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      verified "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" verify block"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Block using block"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Commit "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return `true` is verification succeed, 'false` otherwise")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" verified "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        block"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Execute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// executing block is costly operation so it might make sense executing asynchronously")]),t._v("\n        state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Height"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if block verification failed, then it is added to `FailedRequests` and the peer is removed from the peer set")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FailedRequests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Store"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ok "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("block"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ok "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          pendingRequest "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("block"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequest\n          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if there is a pending request sent to the peer that is just to be removed from the peer set, add it to `FailedRequests`")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" pendingRequest "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FailedRequests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pendingRequest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PendingRequestsNum"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PeerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        done "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" done "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("In the proposed architecture "),e("code",[t._v("Controller")]),t._v(" is not active task, i.e., it is being called by the "),e("code",[t._v("Executor")]),t._v(". Depending on\nthe return values returned by "),e("code",[t._v("Controller")]),t._v(","),e("code",[t._v("Executor")]),t._v(" will send a message to some peer ("),e("code",[t._v("msg")]),t._v(" != nil), trigger a\ntimeout ("),e("code",[t._v("timeout")]),t._v(" != nil) or deal with errors ("),e("code",[t._v("error")]),t._v(" != nil).\nIn case a timeout is triggered, it will provide as an input to "),e("code",[t._v("Controller")]),t._v(" the corresponding timeout event once\ntimeout expires.")]),t._v(" "),e("h2",{attrs:{id:"status"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#status"}}),t._v(" Status")]),t._v(" "),e("p",[t._v("Draft.")]),t._v(" "),e("h2",{attrs:{id:"consequences"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#consequences"}}),t._v(" Consequences")]),t._v(" "),e("h3",{attrs:{id:"positive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#positive"}}),t._v(" Positive")]),t._v(" "),e("ul",[e("li",[t._v("isolated implementation of the algorithm")]),t._v(" "),e("li",[t._v("improved testability - simpler to prove correctness")]),t._v(" "),e("li",[t._v("clearer separation of concerns - easier to reason")])]),t._v(" "),e("h3",{attrs:{id:"negative"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#negative"}}),t._v(" Negative")]),t._v(" "),e("h3",{attrs:{id:"neutral"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#neutral"}}),t._v(" Neutral")])])}),[],!1,null,null,null);s.default=n.exports}}]);